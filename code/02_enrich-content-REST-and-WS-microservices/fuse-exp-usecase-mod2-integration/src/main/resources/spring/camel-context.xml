<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd       http://camel.apache.org/schema/cxf  http://camel.apache.org/schema/cxf/camel-cxf.xsd">
    <cxf:cxfEndpoint
        address="http://{{soap.host}}:{{soap.port}}/ws/customerService"
        id="customerWebService" loggingFeatureEnabled="true"
        serviceClass="org.fuse.usecase.service.CustomerWS" wsdlURL="classpath:wsdl/customerService.wsdl"/>
    <bean class="org.fuse.usecase.AccountAggregator" id="reconcileData"/>
    <bean class="org.fuse.usecase.ProcessorBean" id="processorBean"/>
    <!--  THIS PROVIDER DOESN'T WORK & RETURN ERROR 415 Unsupported Media Type
      It can't also handle the Body : No message body reader has been found for
      class CXF_Test.cxf_test.Book, ContentType: application/json
      <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider"/>
    -->
    <bean
        class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider" id="jsonProvider"/>
    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">
        <dataFormats>
            <json id="transform-json" library="Jackson" unmarshalTypeName="org.globex.Account"/>
        </dataFormats>
        <route id="_route1">
            <from id="_from1" uri="amqp:queue:accountQueue"/>
            <log id="_log1" message="Input json: ${body}"/>
            <unmarshal id="_unmarshal1" ref="transform-json"/>
            <log id="_log2" message="${body}"/>
            <multicast id="_multicast1" strategyRef="reconcileData">
                <to id="_to1" uri="direct:callRestEndpoint"/>
                <to id="_to2" uri="direct:callWSEndpoint"/>
            </multicast>
            <transform id="_transform1">
                <method method="defineNamedParameters" ref="processorBean"/>
            </transform>
            <to id="_to5" uri="sql:INSERT INTO USECASE.T_ACCOUNT (CLIENT_ID, SALES_CONTACT, COMPANY_NAME, COMPANY_GEO, COMPANY_ACTIVE, CONTACT_FIRST_NAME, CONTACT_LAST_NAME, CONTACT_ADDRESS, CONTACT_CITY, CONTACT_STATE, CONTACT_ZIP, CONTACT_PHONE, CREATION_DATE, CREATION_USER) values (:#CLIENT_ID, :#SALES_CONTACT, :#COMPANY_NAME, :#COMPANY_GEO, :#COMPANY_ACTIVE, :#CONTACT_FIRST_NAME, :#CONTACT_LAST_NAME, :#CONTACT_ADDRESS, :#CONTACT_CITY, :#CONTACT_STATE, :#CONTACT_ZIP, :#CONTACT_PHONE, :#CREATION_DATE, :#CREATION_USER)"/>
        </route>
        <route id="_route2">
            <from id="_from2" uri="direct:callRestEndpoint"/>
            <removeHeaders id="_removeHeaders1" pattern="CamelHttp*"/>
            <setHeader headerName="Content-Type" id="_setHeader1">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="Accept" id="_setHeader2">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod" id="_setHeader3">
                <constant>POST</constant>
            </setHeader>
            <setHeader headerName="CamelHttpPath" id="_setHeader4">
                <constant>/customerservice/enrich</constant>
            </setHeader>
            <setHeader headerName="CamelCxfRsUsingHttpAPI" id="_setHeader5">
                <constant>True</constant>
            </setHeader>
            <marshal id="_unmarshal2" ref="transform-json"/>
            <toD id="_to3" uri="http4:{{rest.host}}:{{rest.port}}/rest"/>
            <unmarshal id="_unmarshal2" ref="transform-json"/>
        </route>
        <route id="_route3">
            <from id="_from3" uri="direct:callWSEndpoint"/>
            <to id="_to4" uri="cxf:bean:customerWebService"/>
            <convertBodyTo id="_convertBodyTo1" type="org.globex.CorporateAccount"/>
        </route>
        <route id="_route4">
            <from id="_from4" uri="direct:test"/>
            <unmarshal id="_unmarshal3" ref="transform-json"/>
            <multicast id="_multicast2" strategyRef="reconcileData">
                <to id="_to6" uri="direct:callRestEndpoint"/>
                <to id="_to7" uri="direct:callWSEndpoint"/>
            </multicast>
            <to id="_to8" uri="mock:test"/>
        </route>
    </camelContext>
</beans>
